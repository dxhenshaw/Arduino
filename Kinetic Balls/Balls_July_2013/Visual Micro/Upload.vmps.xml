<VisualMicro>
  <Program Name="Balls_July_2013" Ext=".ino" Location="S:\Arduino\Kinetic Balls\Balls_July_2013">
    <Compile CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno" IsDebugStart="1" SketchName="Balls_July_2013" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 50;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_HARDWARESERIAL;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino10x" Package="arduino" Platform="avr" Architecture="avr">
      <Board Name="uno" Description="Arduino Uno" CoreFolder="C:\Program Files\arduino-1.0.3\hardware\arduino\cores\arduino" VariantFullPath="C:\Program Files\arduino-1.0.3\hardware\arduino\variants\standard" McuIdePath="C:\Program Files\arduino-1.0.3" McuSketchBookPath="C:\Users\David\Documents\Arduino" name="Arduino Uno" upload.protocol="arduino" upload.maximum_size="32256" upload.speed="115200" bootloader.low_fuses="0xff" bootloader.high_fuses="0xde" bootloader.extended_fuses="0x05" bootloader.path="optiboot" bootloader.file="optiboot_atmega328.hex" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x0F" build.mcu="atmega328p" build.f_cpu="16000000L" build.core="arduino" build.variant="standard" runtime.ide.path="C:\Program Files\arduino-1.0.3" build.system.path="C:\Program Files\arduino-1.0.3\hardware\arduino\system" runtime.ide.version="103" originalid="uno" vm.platform.root.path="C:\Program Files\Visual Micro\Visual Micro for Arduino\Micro Platforms\arduino10x" build.core.vmresolved="C:\Program Files\arduino-1.0.3\hardware\arduino\cores\arduino" build.core.parentfolder.vmresolved="C:\Program Files\arduino-1.0.3\hardware\arduino\cores" build.core.coresparentfolder.vmresolved="C:\Program Files\arduino-1.0.3\hardware\arduino" vm.core.include="arduino.h" ide.hint="Arduino 0023 and 1.0.x Ide" ide.location.key="Arduino" ide.location.ide.winreg="Arduino 1.0.x Application" ide.location.sketchbook.winreg="Arduino 1.0.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.location.sketchbook.default="%MYDOCUMENTS%\arduino" ide.location.preferences="%VM_APPDATA_ROAMING%\arduino\preferences.txt" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.platformswithoutpackage="true" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionLTEQ="149" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" vm.debug="true" software="ARDUINO" ide.appid="arduino10x" location.sketchbook="C:\Users\David\Documents\Arduino" build.board="AVR_UNO" vm.boardsource.path="C:\Program Files\arduino-1.0.3\hardware\arduino" vm.platformname.name="avr" build.arch="AVR" build.variant.vmresolved="C:\Program Files\arduino-1.0.3\hardware\arduino\variants\standard" vm.runtime.compiler.showwarnings="false" compiler.path="C:\Program Files\arduino-1.0.3\hardware\tools\avr\bin\" includes=" -I&quot;C:\Program Files\arduino-1.0.3\hardware\arduino\cores\arduino&quot;  -I&quot;C:\Program Files\arduino-1.0.3\hardware\arduino\variants\standard&quot;  -I&quot;C:\Program Files\Visual Micro\Visual Micro for Arduino\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;C:\Program Files\arduino-1.0.3\libraries\Wire&quot;  -I&quot;C:\Program Files\arduino-1.0.3\libraries\RealTimeClockDS1307&quot;  -I&quot;C:\Program Files\arduino-1.0.3\libraries\EEPROM&quot;  -I&quot;C:\Program Files\arduino-1.0.3\libraries&quot;  -I&quot;C:\Program Files\arduino-1.0.3\hardware\arduino\libraries&quot;  -I&quot;C:\Program Files\Visual Micro\Visual Micro for Arduino\Micro Platforms\default\debuggers&quot;  -I&quot;C:\Users\David\Documents\Arduino\libraries&quot;  -I&quot;C:\Program Files\arduino-1.0.3\libraries\Wire\utility&quot;" build.path="C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno" build.project_name="Balls_July_2013" build.variant.path="C:\Program Files\arduino-1.0.3\hardware\arduino\variants\standard" archive_file="core.a" object_file="C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno\EEPROM\EEPROM.cpp.o" source_file="C:\Program Files\arduino-1.0.3\libraries\EEPROM\EEPROM.cpp" object_files="&quot;C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno\Balls_July_2013.cpp.o&quot; &quot;C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno\LiquidCrystal_I2C.cpp.o&quot; &quot;C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno\VM_DBG\VM_mem_check.c.o&quot; &quot;C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno\VM_DBG\VM_DBG.cpp.o&quot; &quot;C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno\Wire\Wire.cpp.o&quot; &quot;C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno\Wire\utility\twi.c.o&quot; &quot;C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno\RealTimeClockDS1307\RealTimeClockDS1307.cpp.o&quot; &quot;C:\Users\David\AppData\Local\VMicro\Arduino\Builds\Balls_July_2013\uno\EEPROM\EEPROM.cpp.o&quot; " build.architecture="avr" vmresolved.compiler.path="C:\Program Files\arduino-1.0.3\hardware\tools\avr\bin\" vmresolved.tools.path="C:\Program Files\arduino-1.0.3\hardware\tools\avr" />
    </Platform>
    <Debug DebugMode="Full" DebugEnabled="1" LocalPortSpeed="" RemotePortSpeed="" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="Balls_July_2013.ino, line 292" Id="362e7acf-b154-4f8f-9744-d7c268969a55" Enabled="1" Message="{millis()}" MessageTextType="2" PreProcessedMessage="{0}" Condition="millis()&gt;0 || millis()&gt;1" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="292" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="250" HitCountType="4" Language="C++" LocationType="3" Tag="&lt;vmbp Id='362e7acf-b154-4f8f-9744-d7c268969a55'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>285				BlinkM_fadeToRandomRGB( unit + 1 , 0xff, 0xff, 0xff);	// set a random color
286			}
287	    }
288	
289	    if (dialHasTurned() == true) break;								// exit when dial has turned.
290	  } 
291	}
--&gt;292	void loop() {
293	showTime();
294	byte z; // used for debugging below
295	
296	//menu selection  
297	if (abs(lastEncoderValue - encoderValue) &gt; encoderGap) {  //menu selection has changed
298	  if (encoderValue &gt; lastEncoderValue) {                  //figure out what the new menu selection is
299	    activeMenuSelection ++;                               // add 1 to menu
300	    if (activeMenuSelection &gt; maxMenuItems) activeMenuSelection = 0;
301	  }else{ 
</Source>
        <MessageVariables>
          <MessageVariable Name="millis()" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="2" Name="Balls_July_2013.ino, line 511" Id="2379b4bd-42d6-4800-9a6c-7e48c415be15" Enabled="1" Message="Pause: {programPauseTime}" MessageTextType="0" PreProcessedMessage="Pause: {0}" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="511" FileColumn="1" FunctionName="loop()" FunctionLineOffset="220" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='2379b4bd-42d6-4800-9a6c-7e48c415be15'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>504			  z = random(0,maxLightShows+1);
505			  lcd.setCursor(0,2);
506			  lcd.print(z);
507			  lcd.print(" ");
508	       randomLightShow(z);						// do something flashy
509	       randomLightShow(7);												// then play a random script 
510	       programPauseTime = random(minPauseTime, maxPauseTime);			// in seconds - wait
--&gt;511	       //pauseForTime(programPauseTime); 
512		   pauseForTime(programPauseTime, false);
513	       break;
514	       
515	      case 7:  // "Romantic"
516	       recalibrate();
517	       sineFrequency = random(1,11);								// pick a random sine wave multiplier from 1 to 10
518	       sineFrequency = sineFrequency/10;							// convert to a number between 0.1 and 1.0 xxx merge with previous wave code
519	       loopCounter = 1;												// same as "current step"
520	       pointA = calculateSinPosition(loopCounter, sineFrequency);	// pointA is the value for unit 10 xxx merge
</Source>
        <MessageVariables>
          <MessageVariable Name="programPauseTime" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="Balls_July_2013.ino, line 1076" Id="8253c2fe-699a-4204-a316-1e5123b94aed" Enabled="1" Message="sB: {z}" MessageTextType="0" PreProcessedMessage="sB: {0}" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="1076" FileColumn="1" FunctionName="randomLightShow(byte i)" FunctionLineOffset="46" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='8253c2fe-699a-4204-a316-1e5123b94aed'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>1069	          flashAll(lightSpeed, lightColor1, lightColor2);
1070	        break; 
1071	
1072	        case 7:    // play a random script between script 10 and 16 inclusive
1073	          z = random(10,17);
1074			  lcd.setCursor(5,2); // for debugging
1075			  lcd.print(z);
--&gt;1076			  BlinkM_playScript(scriptAllBlinkMs,z, 0, 0); //   Args: blinkM addr, script#, 0=repeat forever, 0=play from beginning      
1077	
1078	        break; 
1079	
1080	        case 8:    //
1081	          BlinkM_fadeToRandomRGB(scriptAllBlinkMs, 0xff, 0xff, 0xff);      // set a random color        
1082	        break; 
1083	
1084	        case 9:    //
1085	          fadeRight(lightSpeed, lightColor1, lightColor2);        
</Source>
        <MessageVariables>
          <MessageVariable Name="z" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="4" Name="Balls_July_2013.ino, line 508" Id="98e9751f-e0a5-4136-ab6e-b102145f76c0" Enabled="1" Message="sA: {z}" MessageTextType="0" PreProcessedMessage="sA: {0}" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="508" FileColumn="1" FunctionName="loop()" FunctionLineOffset="217" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='98e9751f-e0a5-4136-ab6e-b102145f76c0'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>501	        
502	      case 6:  // Light show 
503		   // setUpChandelier();												// adopt chandelier shape xxx add back in!
504			  z = random(0,maxLightShows+1);
505			  lcd.setCursor(0,2);
506			  lcd.print(z);
507			  lcd.print(" ");
--&gt;508	       randomLightShow(z);						// do something flashy
509	       randomLightShow(7);												// then play a random script 
510	       programPauseTime = random(minPauseTime, maxPauseTime);			// in seconds - wait
511	       //pauseForTime(programPauseTime); 
512		   pauseForTime(programPauseTime, false);
513	       break;
514	       
515	      case 7:  // "Romantic"
516	       recalibrate();
517	       sineFrequency = random(1,11);								// pick a random sine wave multiplier from 1 to 10
</Source>
        <MessageVariables>
          <MessageVariable Name="z" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="5" Name="Balls_July_2013.ino, line 1884" Id="6aeb5bf7-38d9-4b7f-848d-e61043326e9e" Enabled="1" Message="Starting pFT" MessageTextType="0" PreProcessedMessage="Starting pFT" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="1884" FileColumn="1" FunctionName="pauseForTime(int k, boolean preventRandomLightShow)" FunctionLineOffset="2" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='6aeb5bf7-38d9-4b7f-848d-e61043326e9e'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>1877	  lastEncoded = encoded; //store this value for next time
1878	  
1879	  if (encoderValue &lt; 1) encoderValue = 99; //prevent negative numbers on menu
1880	  if (encoderValue &gt; 99) encoderValue = 1; //prevent negative numbers on menu
1881	}
1882	//------------------------------------
1883	void pauseForTime(int k, boolean preventRandomLightShow) {		// pause for k seconds, including a countdown
--&gt;1884	  printStatusMessage(msgPause);
1885	  prevMinutes = RTC.getMinutes();
1886	  for (int i=k ; i &gt; 0; i--) {
1887	    showTime();
1888	    lcd.setCursor(17,3);
1889	    printPositionDigits(i);
1890	    delay(997);														// pause for almost one second
1891	
1892	    if ( (selectedMenuItem != sleepMenuItem) &amp;&amp;						// if we're not sleeping and
1893			(preventRandomLightShow == false) ) {						// if flag isn't set to prevent a random color change
</Source>
      </BreakPoint>
      <BreakPoint Index="6" Name="Balls_July_2013.ino, line 1906" Id="40b516ad-d9cc-43d6-ad48-c6b1b0044607" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="1906" FileColumn="1" FunctionName="pauseForTime(int k, boolean preventRandomLightShow)" FunctionLineOffset="24" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='40b516ad-d9cc-43d6-ad48-c6b1b0044607'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>1899				//randomLightShow(random(0,10));  // xxx do not call any shows that in turn have a pauseTime! - temporarily turn off random light show
1900				prevMinutes = RTC.getMinutes(); }
1901	
1902			// if on average 6 seconds has passed, cause a random pendant to fade to a random color
1903			if ((random(0,6) == 5)) {
1904				byte unit = random(0,10);
1905				BlinkM_stopScript( unit + 1 );							// turn off any script currently playing
--&gt;1906				ballGoTo ( unit, black );
1907				BlinkM_fadeToRandomRGB( unit + 1 , 0xff, 0xff, 0xff);	// set a random color
1908				delay(1);
1909			}
1910	    }
1911	
1912	    if (dialHasTurned() == true) break;								// exit when dial has turned.
1913	  } 
1914	  delay(1);
1915	}
</Source>
      </BreakPoint>
      <BreakPoint Index="7" Name="Balls_July_2013.ino, line 504" Id="6fec1c40-3b77-4f51-8c02-55f7d240d11f" Enabled="1" Message="&gt; 6" MessageTextType="0" PreProcessedMessage="&gt; 6" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="504" FileColumn="1" FunctionName="loop()" FunctionLineOffset="213" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='6fec1c40-3b77-4f51-8c02-55f7d240d11f'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>497	          if (dialHasTurned() == true) break;
498	        } while (abs(lastEncoderValue - encoderValue) &lt; encoderGap);	// exit when dial has turned. Note &lt; operation.
499	               
500	        break;
501	        
502	      case 6:  // Light show 
503		   // setUpChandelier();												// adopt chandelier shape xxx add back in!
--&gt;504			  z = random(0,maxLightShows+1);
505			  lcd.setCursor(0,2);
506			  lcd.print(z);
507			  lcd.print(" ");
508	       randomLightShow(z);						// do something flashy
509	       randomLightShow(7);												// then play a random script 
510	       programPauseTime = random(minPauseTime, maxPauseTime);			// in seconds - wait
511	       //pauseForTime(programPauseTime); 
512		   pauseForTime(programPauseTime, false);
513	       break;
</Source>
      </BreakPoint>
      <BreakPoint Index="8" Name="Balls_July_2013.ino, line 513" Id="34f8ed69-2d4e-4c34-9bef-04b1f851f4d0" Enabled="1" Message="&lt; 6" MessageTextType="0" PreProcessedMessage="&lt; 6" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="513" FileColumn="1" FunctionName="loop()" FunctionLineOffset="222" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='34f8ed69-2d4e-4c34-9bef-04b1f851f4d0'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>506			  lcd.print(z);
507			  lcd.print(" ");
508	       randomLightShow(z);						// do something flashy
509	       randomLightShow(7);												// then play a random script 
510	       programPauseTime = random(minPauseTime, maxPauseTime);			// in seconds - wait
511	       //pauseForTime(programPauseTime); 
512		   pauseForTime(programPauseTime, false);
--&gt;513	       break;
514	       
515	      case 7:  // "Romantic"
516	       recalibrate();
517	       sineFrequency = random(1,11);								// pick a random sine wave multiplier from 1 to 10
518	       sineFrequency = sineFrequency/10;							// convert to a number between 0.1 and 1.0 xxx merge with previous wave code
519	       loopCounter = 1;												// same as "current step"
520	       pointA = calculateSinPosition(loopCounter, sineFrequency);	// pointA is the value for unit 10 xxx merge
521	       
522		   ballFadeTo(allBlinkMs,blue);
</Source>
      </BreakPoint>
      <BreakPoint Index="9" Name="Balls_July_2013.ino, line 1914" Id="eb3a83fb-b2fe-4321-8b00-30e3d8d6d231" Enabled="1" Message="Leaving pFT" MessageTextType="0" PreProcessedMessage="Leaving pFT" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="1914" FileColumn="1" FunctionName="pauseForTime(int k, boolean preventRandomLightShow)" FunctionLineOffset="31" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='eb3a83fb-b2fe-4321-8b00-30e3d8d6d231'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>1907				BlinkM_fadeToRandomRGB( unit + 1 , 0xff, 0xff, 0xff);	// set a random color
1908				delay(1);
1909			}
1910	    }
1911	
1912	    if (dialHasTurned() == true) break;								// exit when dial has turned.
1913	  } 
--&gt;1914	  delay(1);
1915	}
</Source>
      </BreakPoint>
      <BreakPoint Index="10" Name="Balls_July_2013.ino, line 1900" Id="08d98c3d-5e9d-476c-91e0-a93d031757b3" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="1900" FileColumn="1" FunctionName="pauseForTime(int k, boolean preventRandomLightShow)" FunctionLineOffset="18" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='acf6a63a-2b9f-4b45-9bcb-0c188bba97e6'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>1893			(preventRandomLightShow == false) ) {						// if flag isn't set to prevent a random color change
1894	
1895			if ( (RTC.getMinutes() != prevMinutes) &amp;&amp;					// if one minute has passed
1896				(selectedMenuItem != quietMood) &amp;&amp;
1897				(selectedMenuItem != 13) ) {							// and we're not in Sun/Moon program or white chandelier
1898					//delay(1);
1899				//randomLightShow(random(0,10));  // xxx do not call any shows that in turn have a pauseTime! - temporarily turn off random light show
--&gt;1900				prevMinutes = RTC.getMinutes(); }
1901	
1902			// if on average 6 seconds has passed, cause a random pendant to fade to a random color
1903			if ((random(0,6) == 5)) {
1904				byte unit = random(0,10);
1905				BlinkM_stopScript( unit + 1 );							// turn off any script currently playing
1906				ballGoTo ( unit, black );
1907				BlinkM_fadeToRandomRGB( unit + 1 , 0xff, 0xff, 0xff);	// set a random color
1908				delay(1);
1909			}
</Source>
      </BreakPoint>
      <BreakPoint Index="11" Name="Balls_July_2013.ino, line 1907" Id="d8215428-037e-44d4-8eed-04bdd0aaa4d0" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="1907" FileColumn="1" FunctionName="pauseForTime(int k, boolean preventRandomLightShow)" FunctionLineOffset="25" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='a0208477-e03a-4823-ad49-772c4d39c009'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>1900				prevMinutes = RTC.getMinutes(); }
1901	
1902			// if on average 6 seconds has passed, cause a random pendant to fade to a random color
1903			if ((random(0,6) == 5)) {
1904				byte unit = random(0,10);
1905				BlinkM_stopScript( unit + 1 );							// turn off any script currently playing
1906				ballGoTo ( unit, black );
--&gt;1907				BlinkM_fadeToRandomRGB( unit + 1 , 0xff, 0xff, 0xff);	// set a random color
1908				delay(1);
1909			}
1910	    }
1911	
1912	    if (dialHasTurned() == true) break;								// exit when dial has turned.
1913	  } 
1914	  delay(1);
1915	}
</Source>
      </BreakPoint>
      <BreakPoint Index="12" Name="Balls_July_2013.ino, line 1908" Id="fd051917-b59a-4c9a-a20d-138eb8725570" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="s:\arduino\kinetic balls\balls_july_2013\balls_july_2013.ino" FileLine="1908" FileColumn="1" FunctionName="pauseForTime(int k, boolean preventRandomLightShow)" FunctionLineOffset="26" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='fb07b8ac-f378-4001-963c-304755f62b50'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>1901	
1902			// if on average 6 seconds has passed, cause a random pendant to fade to a random color
1903			if ((random(0,6) == 5)) {
1904				byte unit = random(0,10);
1905				BlinkM_stopScript( unit + 1 );							// turn off any script currently playing
1906				ballGoTo ( unit, black );
1907				BlinkM_fadeToRandomRGB( unit + 1 , 0xff, 0xff, 0xff);	// set a random color
--&gt;1908				delay(1);
1909			}
1910	    }
1911	
1912	    if (dialHasTurned() == true) break;								// exit when dial has turned.
1913	  } 
1914	  delay(1);
1915	}
</Source>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>